(window.webpackJsonp=window.webpackJsonp||[]).push([[58],{550:function(t,a,s){"use strict";s.r(a);var n=s(1),e=Object(n.a)({},(function(){var t=this,a=t.$createElement,s=t._self._c||a;return s("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[s("p",[s("code",[t._v("sharding-core")]),t._v("框架是一款分表分库组件,一款将efcore的一个dbcontext一个对象一张表扩展成了一个dbcontext一个对象多张表对应多个dbcontext,一款基于表达式解析，具有高性能路由的分表分库框架。")]),t._v(" "),s("h2",{attrs:{id:"全局"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#全局"}},[t._v("#")]),t._v(" 全局")]),t._v(" "),s("h3",{attrs:{id:"ientitymetadatamanager"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#ientitymetadatamanager"}},[t._v("#")]),t._v(" IEntityMetadataManager")]),t._v(" "),s("p",[s("code",[t._v("IEntityMetadataManager<TShardingDbContext>")]),t._v("管理对象数据，将对象数据分表和分库的对象进行存储管理，可以区分对象是否分表是否分库，并且可以获取对应的对象类型元数据"),s("code",[t._v("EntityMetadata")])]),t._v(" "),s("div",{staticClass:"language-csharp line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-csharp"}},[s("code",[s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//直接获取")]),t._v("\nShardingContainer"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token generic-method"}},[s("span",{pre:!0,attrs:{class:"token function"}},[t._v("GetService")]),s("span",{pre:!0,attrs:{class:"token generic class-name"}},[s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("<")]),t._v("IEntityMetadataManager"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("<")]),t._v("TShardingDbContext"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])])]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//通过非泛型方法获取")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("IEntityMetadataManager"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("ShardingContainer"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("GetService")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("typeof")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token type-expression class-name"}},[t._v("IEntityMetadataManager"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("<")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("GetGenericType0")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("shardingDbContext"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("GetType")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])]),t._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[t._v("1")]),s("br"),s("span",{staticClass:"line-number"},[t._v("2")]),s("br"),s("span",{staticClass:"line-number"},[t._v("3")]),s("br"),s("span",{staticClass:"line-number"},[t._v("4")]),s("br")])]),s("h3",{attrs:{id:"entitymetadata"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#entitymetadata"}},[t._v("#")]),t._v(" EntityMetadata")]),t._v(" "),s("p",[s("code",[t._v("EntityMetadata")]),t._v("对象类型元数据，是针对分表分库对象的数据解析后的存储，通过对象类型元数据可以获取到对象的类型和对应的"),s("code",[t._v("虚拟表名")]),t._v("(不带后缀的表名)，"),s("code",[t._v("表主键")]),t._v("，是否分表是否分库，包括分表he分库的对应字段属性信息")]),t._v(" "),s("div",{staticClass:"language-csharp line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-csharp"}},[s("code",[s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//直接获取")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("IEntityMetadataManager")]),t._v(" entityMetadataManager"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),s("span",{pre:!0,attrs:{class:"token range operator"}},[t._v("..")]),s("span",{pre:!0,attrs:{class:"token range operator"}},[t._v("..")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\nentityMetadataManager"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("TryGet")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("EntityType"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\nentityMetadataManager"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token generic-method"}},[s("span",{pre:!0,attrs:{class:"token function"}},[t._v("TryGet")]),s("span",{pre:!0,attrs:{class:"token generic class-name"}},[s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("<")]),t._v("TEntity"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])])]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("TEntity"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])]),t._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[t._v("1")]),s("br"),s("span",{staticClass:"line-number"},[t._v("2")]),s("br"),s("span",{staticClass:"line-number"},[t._v("3")]),s("br"),s("span",{staticClass:"line-number"},[t._v("4")]),s("br")])]),s("h3",{attrs:{id:"ivirtualdatasource"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#ivirtualdatasource"}},[t._v("#")]),t._v(" IVirtualDataSource")]),t._v(" "),s("p",[s("code",[t._v("IVirtualDataSource<TShardingDbContext>")]),t._v("虚拟数据源，虚拟数据源用于记录当前分库拥有多少个数据源名称(拥有多少个:DataSourceName),\n整个dbcontext只有一个，可以通过依赖注入获取 .")]),t._v(" "),s("div",{staticClass:"language-csharp line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-csharp"}},[s("code",[s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//直接获取")]),t._v("\nShardingContainer"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token generic-method"}},[s("span",{pre:!0,attrs:{class:"token function"}},[t._v("GetService")]),s("span",{pre:!0,attrs:{class:"token generic class-name"}},[s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("<")]),t._v("IVirtualDataSource"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("<")]),t._v("TShardingDbContext"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])])]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//通过非泛型方法获取")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("IVirtualDataSource"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("ShardingContainer"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("GetService")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("typeof")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token type-expression class-name"}},[t._v("IVirtualDataSource"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("<")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("GetGenericType0")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("shardingDbContext"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("GetType")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])]),t._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[t._v("1")]),s("br"),s("span",{staticClass:"line-number"},[t._v("2")]),s("br"),s("span",{staticClass:"line-number"},[t._v("3")]),s("br"),s("span",{staticClass:"line-number"},[t._v("4")]),s("br")])]),s("div",{staticClass:"custom-block tip"},[s("p",{staticClass:"custom-block-title"},[t._v("自定义标题")]),t._v(" "),s("p",[t._v("因为"),s("code",[t._v("IVirtualDataSource<TShardingDbContext>")]),t._v("继承"),s("code",[t._v("IVirtualDataSource")]),t._v("，并且所有的接口都在"),s("code",[t._v("IVirtualDataSource")]),t._v("但是注入为了区分多个"),s("code",[t._v("DdbContext")]),t._v("之间所以采用泛型注入，其他接口也是同理")])]),t._v(" "),s("h3",{attrs:{id:"datasourcename"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#datasourcename"}},[t._v("#")]),t._v(" DataSourceName")]),t._v(" "),s("p",[t._v("数据源名称，默认针对"),s("code",[t._v("ShardingCore")]),t._v("每个链接都对应其自己的数据源，都有属于自己的数据源名称和数据源的链接。无论是否分表数据源名称都会有，只不过因为仅分表状态下只链接单个数据库，所以数据源名称在整个框架下只有一个，所以如果您是分表那么数据源名称可以随便添加，因为默认的数据源名称有且只有一个。")]),t._v(" "),s("div",{staticClass:"language-csharp line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-csharp"}},[s("code",[s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//配置")]),t._v("\n "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("AddDefaultDataSource")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"ds0"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"Data Source=localhost;Initial Catalog=ShardingCoreDBxx0;Integrated Security=True;"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n                "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("AddShardingDataSource")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("sp "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=>")]),t._v("\n                "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n                    "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("return")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("new")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token constructor-invocation class-name"}},[t._v("Dictionary"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("<")]),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("string")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("string")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n                    "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n                        "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"ds1"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"Data Source=localhost;Initial Catalog=ShardingCoreDBxx1;Integrated Security=True;"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n                        "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"ds2"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"Data Source=localhost;Initial Catalog=ShardingCoreDBxx2;Integrated Security=True;"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n                    "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n                "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n")])]),t._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[t._v("1")]),s("br"),s("span",{staticClass:"line-number"},[t._v("2")]),s("br"),s("span",{staticClass:"line-number"},[t._v("3")]),s("br"),s("span",{staticClass:"line-number"},[t._v("4")]),s("br"),s("span",{staticClass:"line-number"},[t._v("5")]),s("br"),s("span",{staticClass:"line-number"},[t._v("6")]),s("br"),s("span",{staticClass:"line-number"},[t._v("7")]),s("br"),s("span",{staticClass:"line-number"},[t._v("8")]),s("br"),s("span",{staticClass:"line-number"},[t._v("9")]),s("br"),s("span",{staticClass:"line-number"},[t._v("10")]),s("br")])]),s("p",[t._v("通过上面我们可以看到我们其实分了三个数据库分别是"),s("code",[t._v("ds0")]),t._v(","),s("code",[t._v("ds1")]),t._v(","),s("code",[t._v("ds2")]),t._v(",使用分表的时候需要注意，仅分表对象才会进入分表，其他所有没有分表路由的对象将全部走DefaultDataSourceName数据库。")]),t._v(" "),s("h3",{attrs:{id:"ishardingtablecreator"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#ishardingtablecreator"}},[t._v("#")]),t._v(" IShardingTableCreator")]),t._v(" "),s("p",[t._v("分表对象创建,可以创建对应的分表指定对应的表后缀即可")]),t._v(" "),s("div",{staticClass:"language-csharp line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-csharp"}},[s("code",[s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//直接获取")]),t._v("\nShardingContainer"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token generic-method"}},[s("span",{pre:!0,attrs:{class:"token function"}},[t._v("GetService")]),s("span",{pre:!0,attrs:{class:"token generic class-name"}},[s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("<")]),t._v("IShardingTableCreator"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("<")]),t._v("TShardingDbContext"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])])]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//通过非泛型方法获取")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("IShardingTableCreator"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("ShardingContainer"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("GetService")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("typeof")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token type-expression class-name"}},[t._v("IShardingTableCreator"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("<")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("GetGenericType0")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("shardingDbContext"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("GetType")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n")])]),t._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[t._v("1")]),s("br"),s("span",{staticClass:"line-number"},[t._v("2")]),s("br"),s("span",{staticClass:"line-number"},[t._v("3")]),s("br"),s("span",{staticClass:"line-number"},[t._v("4")]),s("br"),s("span",{staticClass:"line-number"},[t._v("5")]),s("br")])]),s("h2",{attrs:{id:"分库概念"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#分库概念"}},[t._v("#")]),t._v(" 分库概念")]),t._v(" "),s("h3",{attrs:{id:"ivirtualdatasourceroute"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#ivirtualdatasourceroute"}},[t._v("#")]),t._v(" IVirtualDataSourceRoute")]),t._v(" "),s("p",[s("code",[t._v("IVirtualDataSourceRoute")]),t._v("虚拟数据源路由,如果您的对象是一个分库对象，那么分库对象必须实现一个虚拟数据源路由"),s("code",[t._v("IVirtualDataSourceRoute")]),t._v("，\n虚拟数据源路由的作用是用来对分库对象进行路由，告诉框架程序应该如何对分库对象进行路由去对应的数据源里面")]),t._v(" "),s("div",{staticClass:"language-csharp line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-csharp"}},[s("code",[s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//首先获取IVirtualDataSource")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("IVirtualDataSource")]),t._v(" virtualDataSource"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),s("span",{pre:!0,attrs:{class:"token range operator"}},[t._v("..")]),s("span",{pre:!0,attrs:{class:"token range operator"}},[t._v("..")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//方法1")]),t._v("\nvirtualDataSource"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("GetRoute")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("EntityType"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//方法2")]),t._v("\nvirtualDataSource"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token generic-method"}},[s("span",{pre:!0,attrs:{class:"token function"}},[t._v("GetRoute")]),s("span",{pre:!0,attrs:{class:"token generic class-name"}},[s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("<")]),t._v("TEntity"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])])]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])]),t._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[t._v("1")]),s("br"),s("span",{staticClass:"line-number"},[t._v("2")]),s("br"),s("span",{staticClass:"line-number"},[t._v("3")]),s("br"),s("span",{staticClass:"line-number"},[t._v("4")]),s("br"),s("span",{staticClass:"line-number"},[t._v("5")]),s("br"),s("span",{staticClass:"line-number"},[t._v("6")]),s("br")])]),s("h2",{attrs:{id:"分表"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#分表"}},[t._v("#")]),t._v(" 分表")]),t._v(" "),s("ul",[s("li",[t._v("[Tail]\n尾巴、后缀物理表的后缀")]),t._v(" "),s("li",[t._v("[TableSeparator]\n尾巴前缀虚拟表和物理表的后缀中间的字符")]),t._v(" "),s("li",[t._v("[物理表]\n顾名思义就是数据库对应的实际表信息,表名(TableName+ TableSeparator+ Tail)比如:SysUser_2021,这边"),s("code",[t._v("SysUser")]),t._v("就是原本未分表时候的映射到数据库的物理表名称，后续的下划线"),s("code",[t._v("_")]),t._v("表示"),s("code",[t._v("TableSeparator")]),t._v(","),s("code",[t._v("2021")]),t._v("表示后缀"),s("code",[t._v("Tail")])])]),t._v(" "),s("p",[t._v("框架内部所有的分表名称规则都是按照(TableName+ TableSeparator+ Tail)来创建的")]),t._v(" "),s("h3",{attrs:{id:"ivirtualtablemanager"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#ivirtualtablemanager"}},[t._v("#")]),t._v(" IVirtualTableManager")]),t._v(" "),s("p",[s("code",[t._v("IVirtualTableManager<TShardingDbContext>")]),t._v("虚拟表管理者，因为对象和数据库表之间的关系从原先的一对一变成了一对一虚拟表然后虚拟表一对多，所以我们一个对象会对应一个虚拟表，这边的所有的虚拟表全部由"),s("code",[t._v("IVirtualTableManager<TShardingDbContext>")]),t._v("管理")]),t._v(" "),s("div",{staticClass:"language-csharp line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-csharp"}},[s("code",[t._v("\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//获取IVirtualTableManager")]),t._v("\nShardingContainer"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token generic-method"}},[s("span",{pre:!0,attrs:{class:"token function"}},[t._v("GetService")]),s("span",{pre:!0,attrs:{class:"token generic class-name"}},[s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("<")]),t._v("IVirtualTableManager"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("<")]),t._v("TShardingDbContext"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])])]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//通过非泛型方法获取")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("IVirtualTableManager"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("ShardingContainer"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("GetService")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("typeof")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token type-expression class-name"}},[t._v("IVirtualTableManager"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("<")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("GetGenericType0")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("shardingDbContext"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("GetType")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])]),t._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[t._v("1")]),s("br"),s("span",{staticClass:"line-number"},[t._v("2")]),s("br"),s("span",{staticClass:"line-number"},[t._v("3")]),s("br"),s("span",{staticClass:"line-number"},[t._v("4")]),s("br"),s("span",{staticClass:"line-number"},[t._v("5")]),s("br")])]),s("h3",{attrs:{id:"ivirtualtable"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#ivirtualtable"}},[t._v("#")]),t._v(" IVirtualTable")]),t._v(" "),s("p",[s("code",[t._v("IVirtualTable")]),t._v("叫做虚拟表,原先"),s("code",[t._v("DbContext")]),t._v("对应一个"),s("code",[t._v("Entity")]),t._v("对应一张"),s("code",[t._v("Table")]),t._v(",虚拟表的出现将"),s("code",[t._v("Entity")]),t._v("和"),s("code",[t._v("Table")]),t._v("之间多了一个虚拟表的概念，就是说原先的对象是直接映射到实际表，那么因为现在实际表名称有很多张，所以一个对象对应的是虚拟表"),s("code",[t._v("IVirtualTable")]),t._v("，虚拟表内部拥有虚拟表路由"),s("code",[t._v("IVirtualTableRoute")]),t._v("，虚拟表路由会将crud的结果通过虚拟表路由，路由到对应的实际表，所以原则上你在数据库里面将看不到原表名称的实际表，除非你的分表是没有后缀的。")]),t._v(" "),s("div",{staticClass:"language-csharp line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-csharp"}},[s("code",[s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//通过虚拟表管理者")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("IVirtualTableManager")]),t._v(" virtualTableManager"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),s("span",{pre:!0,attrs:{class:"token range operator"}},[t._v("..")]),s("span",{pre:!0,attrs:{class:"token range operator"}},[t._v("..")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\nvirtualTableManager"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("GetVirtualTable")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("EntityType"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\nvirtualTableManager"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token generic-method"}},[s("span",{pre:!0,attrs:{class:"token function"}},[t._v("GetVirtualTable")]),s("span",{pre:!0,attrs:{class:"token generic class-name"}},[s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("<")]),t._v("TEntity"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])])]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n\n")])]),t._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[t._v("1")]),s("br"),s("span",{staticClass:"line-number"},[t._v("2")]),s("br"),s("span",{staticClass:"line-number"},[t._v("3")]),s("br"),s("span",{staticClass:"line-number"},[t._v("4")]),s("br"),s("span",{staticClass:"line-number"},[t._v("5")]),s("br")])]),s("h3",{attrs:{id:"ivirtualtableroute"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#ivirtualtableroute"}},[t._v("#")]),t._v(" IVirtualTableRoute")]),t._v(" "),s("p",[s("code",[t._v("IVirtualTableRoute")]),t._v("虚拟表路由，针对对象如果我们需要对其进行分表，那么我么你必须要重写分表的路由，分表路由会告诉程序我们的这个sql执行是该如何找寻对应的实际表，而不用用户手动去指定对应的表，每一个虚拟表都会拥有一个虚拟表路由")]),t._v(" "),s("div",{staticClass:"language-csharp line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-csharp"}},[s("code",[s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//首先获取虚拟表")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("IVirtualTable")]),t._v(" virtualTable"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),s("span",{pre:!0,attrs:{class:"token range operator"}},[t._v("..")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//通过虚拟表获取虚拟表路由")]),t._v("\nvirtualTable"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("GetVirtualRoute")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])]),t._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[t._v("1")]),s("br"),s("span",{staticClass:"line-number"},[t._v("2")]),s("br"),s("span",{staticClass:"line-number"},[t._v("3")]),s("br"),s("span",{staticClass:"line-number"},[t._v("4")]),s("br")])])])}),[],!1,null,null,null);a.default=e.exports},594:function(t,a,s){"use strict";s.r(a);var n=s(1),e=Object(n.a)({},(function(){var t=this.$createElement;return(this._self._c||t)("ContentSlotsDistributor",{attrs:{"slot-key":this.$parent.slotKey}})}),[],!1,null,null,null);a.default=e.exports},602:function(t,a,s){"use strict";s.r(a);var n=s(1),e=Object(n.a)({},(function(){var t=this,a=t.$createElement,s=t._self._c||a;return s("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[s("p",[s("code",[t._v("sharding-core")]),t._v("框架是一款分表分库组件,一款将efcore的一个dbcontext一个对象一张表扩展成了一个dbcontext一个对象多张表对应多个dbcontext,一款基于表达式解析，具有高性能路由的分表分库框架。")]),t._v(" "),s("h2",{attrs:{id:"全局"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#全局"}},[t._v("#")]),t._v(" 全局")]),t._v(" "),s("h3",{attrs:{id:"ishardingentityconfigoptions"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#ishardingentityconfigoptions"}},[t._v("#")]),t._v(" IShardingEntityConfigOptions")]),t._v(" "),s("p",[s("code",[t._v("IShardingEntityConfigOptions<TShardingDbContext>")]),t._v("对应配置信息获取")]),t._v(" "),s("div",{staticClass:"language-csharp line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-csharp"}},[s("code",[s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//直接获取")]),t._v("\nShardingContainer"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token generic-method"}},[s("span",{pre:!0,attrs:{class:"token function"}},[t._v("GetService")]),s("span",{pre:!0,attrs:{class:"token generic class-name"}},[s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("<")]),t._v("IShardingEntityConfigOptions"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("<")]),t._v("TShardingDbContext"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])])]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//构造函数依赖注入")]),t._v("\nIShardingEntityConfigOptions"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v("TShardingDbContext"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v("\n")])]),t._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[t._v("1")]),s("br"),s("span",{staticClass:"line-number"},[t._v("2")]),s("br"),s("span",{staticClass:"line-number"},[t._v("3")]),s("br"),s("span",{staticClass:"line-number"},[t._v("4")]),s("br")])]),s("h3",{attrs:{id:"ientitymetadatamanager"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#ientitymetadatamanager"}},[t._v("#")]),t._v(" IEntityMetadataManager")]),t._v(" "),s("p",[s("code",[t._v("IEntityMetadataManager<TShardingDbContext>")]),t._v("管理对象数据，将对象数据分表和分库的对象进行存储管理，可以区分对象是否分表是否分库，并且可以获取对应的对象类型元数据"),s("code",[t._v("EntityMetadata")])]),t._v(" "),s("div",{staticClass:"language-csharp line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-csharp"}},[s("code",[s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//直接获取")]),t._v("\nShardingContainer"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token generic-method"}},[s("span",{pre:!0,attrs:{class:"token function"}},[t._v("GetService")]),s("span",{pre:!0,attrs:{class:"token generic class-name"}},[s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("<")]),t._v("IEntityMetadataManager"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("<")]),t._v("TShardingDbContext"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])])]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//通过非泛型方法获取")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("IEntityMetadataManager"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("ShardingContainer"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("GetService")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("typeof")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token type-expression class-name"}},[t._v("IEntityMetadataManager"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("<")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("GetGenericType0")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("shardingDbContext"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("GetType")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])]),t._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[t._v("1")]),s("br"),s("span",{staticClass:"line-number"},[t._v("2")]),s("br"),s("span",{staticClass:"line-number"},[t._v("3")]),s("br"),s("span",{staticClass:"line-number"},[t._v("4")]),s("br")])]),s("h3",{attrs:{id:"entitymetadata"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#entitymetadata"}},[t._v("#")]),t._v(" EntityMetadata")]),t._v(" "),s("p",[s("code",[t._v("EntityMetadata")]),t._v("对象类型元数据，是针对分表分库对象的数据解析后的存储，通过对象类型元数据可以获取到对象的类型和对应的"),s("code",[t._v("虚拟表名")]),t._v("(不带后缀的表名)，"),s("code",[t._v("表主键")]),t._v("，是否分表是否分库，包括分表he分库的对应字段属性信息")]),t._v(" "),s("div",{staticClass:"language-csharp line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-csharp"}},[s("code",[s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//直接获取")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("IEntityMetadataManager")]),t._v(" entityMetadataManager"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),s("span",{pre:!0,attrs:{class:"token range operator"}},[t._v("..")]),s("span",{pre:!0,attrs:{class:"token range operator"}},[t._v("..")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\nentityMetadataManager"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("TryGet")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("EntityType"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\nentityMetadataManager"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token generic-method"}},[s("span",{pre:!0,attrs:{class:"token function"}},[t._v("TryGet")]),s("span",{pre:!0,attrs:{class:"token generic class-name"}},[s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("<")]),t._v("TEntity"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])])]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("TEntity"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])]),t._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[t._v("1")]),s("br"),s("span",{staticClass:"line-number"},[t._v("2")]),s("br"),s("span",{staticClass:"line-number"},[t._v("3")]),s("br"),s("span",{staticClass:"line-number"},[t._v("4")]),s("br")])]),s("h3",{attrs:{id:"ivirtualdatasourcemanager"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#ivirtualdatasourcemanager"}},[t._v("#")]),t._v(" IVirtualDataSourceManager")]),t._v(" "),s("p",[s("code",[t._v("IVirtualDataSourceManager<TShardingDbContext>")]),t._v("虚拟数据源管理者，虚拟数据源用于记录当前分库拥有多少个数据源名称(拥有多少个:DataSourceName),\n整个dbcontext只有一个，可以通过依赖注入获取 .")]),t._v(" "),s("div",{staticClass:"language-csharp line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-csharp"}},[s("code",[s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//直接获取")]),t._v("\nShardingContainer"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token generic-method"}},[s("span",{pre:!0,attrs:{class:"token function"}},[t._v("GetRequiredVirtualDataSourceManager")]),s("span",{pre:!0,attrs:{class:"token generic class-name"}},[s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("<")]),t._v("TShardingDbContext"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])])]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//构造函数依赖注入")]),t._v("\nIVirtualDataSourceManager"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v("TShardingDbContext"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v("\n")])]),t._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[t._v("1")]),s("br"),s("span",{staticClass:"line-number"},[t._v("2")]),s("br"),s("span",{staticClass:"line-number"},[t._v("3")]),s("br"),s("span",{staticClass:"line-number"},[t._v("4")]),s("br")])]),s("h3",{attrs:{id:"ivirtualdatasource"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#ivirtualdatasource"}},[t._v("#")]),t._v(" IVirtualDataSource")]),t._v(" "),s("p",[s("code",[t._v("IVirtualDataSource<TShardingDbContext>")]),t._v("数据源,可以通过"),s("code",[t._v("IVirtualDataSourceManager<TShardingDbContext>")]),t._v("的"),s("code",[t._v("GetCurrentVirtualDataSource()")]),t._v("和"),s("code",[t._v("GetVirtualDataSource(string configId)")]),t._v("这两个方法获取,其中"),s("code",[t._v("IVirtualDataSource")]),t._v("可以获取当前配置的额外信息,通过改"),s("code",[t._v("ConfigurationParams")]),t._v("属性")]),t._v(" "),s("h3",{attrs:{id:"datasourcename"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#datasourcename"}},[t._v("#")]),t._v(" DataSourceName")]),t._v(" "),s("p",[t._v("数据源名称，默认针对"),s("code",[t._v("ShardingCore")]),t._v("每个链接都对应其自己的数据源，都有属于自己的数据源名称和数据源的链接。无论是否分表数据源名称都会有，只不过因为仅分表状态下只链接单个数据库，所以数据源名称在整个框架下只有一个，所以如果您是分表那么数据源名称可以随便添加，因为默认的数据源名称有且只有一个。")]),t._v(" "),s("div",{staticClass:"language-csharp line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-csharp"}},[s("code",[s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//配置")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("AddDefaultDataSource")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"ds0"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"Data Source=localhost;Initial Catalog=ShardingCoreDBxx0;Integrated Security=True;"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("AddExtraDataSource")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("sp "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=>")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("return")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("new")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token constructor-invocation class-name"}},[t._v("Dictionary"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("<")]),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("string")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("string")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n        "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"ds1"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"Data Source=localhost;Initial Catalog=ShardingCoreDBxx1;Integrated Security=True;"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n        "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"ds2"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"Data Source=localhost;Initial Catalog=ShardingCoreDBxx2;Integrated Security=True;"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n")])]),t._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[t._v("1")]),s("br"),s("span",{staticClass:"line-number"},[t._v("2")]),s("br"),s("span",{staticClass:"line-number"},[t._v("3")]),s("br"),s("span",{staticClass:"line-number"},[t._v("4")]),s("br"),s("span",{staticClass:"line-number"},[t._v("5")]),s("br"),s("span",{staticClass:"line-number"},[t._v("6")]),s("br"),s("span",{staticClass:"line-number"},[t._v("7")]),s("br"),s("span",{staticClass:"line-number"},[t._v("8")]),s("br"),s("span",{staticClass:"line-number"},[t._v("9")]),s("br"),s("span",{staticClass:"line-number"},[t._v("10")]),s("br")])]),s("p",[t._v("通过上面我们可以看到我们其实分了三个数据库分别是"),s("code",[t._v("ds0")]),t._v(","),s("code",[t._v("ds1")]),t._v(","),s("code",[t._v("ds2")]),t._v(",使用分表的时候需要注意，仅分表对象才会进入分表，其他所有没有分表路由的对象将全部走DefaultDataSourceName数据库。")]),t._v(" "),s("h3",{attrs:{id:"ishardingtablecreator"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#ishardingtablecreator"}},[t._v("#")]),t._v(" IShardingTableCreator")]),t._v(" "),s("p",[t._v("分表对象创建,可以创建对应的分表指定对应的表后缀即可")]),t._v(" "),s("div",{staticClass:"language-csharp line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-csharp"}},[s("code",[s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//直接获取")]),t._v("\nShardingContainer"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token generic-method"}},[s("span",{pre:!0,attrs:{class:"token function"}},[t._v("GetService")]),s("span",{pre:!0,attrs:{class:"token generic class-name"}},[s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("<")]),t._v("IShardingTableCreator"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("<")]),t._v("TShardingDbContext"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])])]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//通过非泛型方法获取")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("IShardingTableCreator"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("ShardingContainer"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("GetService")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("typeof")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token type-expression class-name"}},[t._v("IShardingTableCreator"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("<")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("GetGenericType0")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("shardingDbContext"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("GetType")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n")])]),t._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[t._v("1")]),s("br"),s("span",{staticClass:"line-number"},[t._v("2")]),s("br"),s("span",{staticClass:"line-number"},[t._v("3")]),s("br"),s("span",{staticClass:"line-number"},[t._v("4")]),s("br"),s("span",{staticClass:"line-number"},[t._v("5")]),s("br")])]),s("h2",{attrs:{id:"分库概念"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#分库概念"}},[t._v("#")]),t._v(" 分库概念")]),t._v(" "),s("h3",{attrs:{id:"ivirtualdatasourceroute"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#ivirtualdatasourceroute"}},[t._v("#")]),t._v(" IVirtualDataSourceRoute")]),t._v(" "),s("p",[s("code",[t._v("IVirtualDataSourceRoute")]),t._v("虚拟数据源路由,如果您的对象是一个分库对象，那么分库对象必须实现一个虚拟数据源路由"),s("code",[t._v("IVirtualDataSourceRoute")]),t._v("，\n虚拟数据源路由的作用是用来对分库对象进行路由，告诉框架程序应该如何对分库对象进行路由去对应的数据源里面")]),t._v(" "),s("div",{staticClass:"language-csharp line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-csharp"}},[s("code",[s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//首先获取IVirtualDataSource")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("IVirtualDataSource")]),t._v(" virtualDataSource"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),s("span",{pre:!0,attrs:{class:"token range operator"}},[t._v("..")]),s("span",{pre:!0,attrs:{class:"token range operator"}},[t._v("..")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//方法1")]),t._v("\nvirtualDataSource"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("GetRoute")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("EntityType"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//方法2")]),t._v("\nvirtualDataSource"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token generic-method"}},[s("span",{pre:!0,attrs:{class:"token function"}},[t._v("GetRoute")]),s("span",{pre:!0,attrs:{class:"token generic class-name"}},[s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("<")]),t._v("TEntity"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])])]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])]),t._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[t._v("1")]),s("br"),s("span",{staticClass:"line-number"},[t._v("2")]),s("br"),s("span",{staticClass:"line-number"},[t._v("3")]),s("br"),s("span",{staticClass:"line-number"},[t._v("4")]),s("br"),s("span",{staticClass:"line-number"},[t._v("5")]),s("br"),s("span",{staticClass:"line-number"},[t._v("6")]),s("br")])]),s("h2",{attrs:{id:"分表"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#分表"}},[t._v("#")]),t._v(" 分表")]),t._v(" "),s("ul",[s("li",[t._v("[Tail]\n尾巴、后缀物理表的后缀")]),t._v(" "),s("li",[t._v("[TableSeparator]\n尾巴前缀虚拟表和物理表的后缀中间的字符")]),t._v(" "),s("li",[t._v("[物理表]\n顾名思义就是数据库对应的实际表信息,表名(TableName+ TableSeparator+ Tail)比如:SysUser_2021,这边"),s("code",[t._v("SysUser")]),t._v("就是原本未分表时候的映射到数据库的物理表名称，后续的下划线"),s("code",[t._v("_")]),t._v("表示"),s("code",[t._v("TableSeparator")]),t._v(","),s("code",[t._v("2021")]),t._v("表示后缀"),s("code",[t._v("Tail")])])]),t._v(" "),s("p",[t._v("框架内部所有的分表名称规则都是按照(TableName+ TableSeparator+ Tail)来创建的")]),t._v(" "),s("h3",{attrs:{id:"ivirtualtablemanager"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#ivirtualtablemanager"}},[t._v("#")]),t._v(" IVirtualTableManager")]),t._v(" "),s("p",[s("code",[t._v("IVirtualTableManager<TShardingDbContext>")]),t._v("虚拟表管理者，因为对象和数据库表之间的关系从原先的一对一变成了一对一虚拟表然后虚拟表一对多，所以我们一个对象会对应一个虚拟表，这边的所有的虚拟表全部由"),s("code",[t._v("IVirtualTableManager<TShardingDbContext>")]),t._v("管理")]),t._v(" "),s("div",{staticClass:"language-csharp line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-csharp"}},[s("code",[t._v("\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//获取IVirtualTableManager")]),t._v("\nShardingContainer"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token generic-method"}},[s("span",{pre:!0,attrs:{class:"token function"}},[t._v("GetService")]),s("span",{pre:!0,attrs:{class:"token generic class-name"}},[s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("<")]),t._v("IVirtualTableManager"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("<")]),t._v("TShardingDbContext"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])])]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//通过非泛型方法获取")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("IVirtualTableManager"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("ShardingContainer"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("GetService")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("typeof")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token type-expression class-name"}},[t._v("IVirtualTableManager"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("<")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("GetGenericType0")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("shardingDbContext"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("GetType")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])]),t._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[t._v("1")]),s("br"),s("span",{staticClass:"line-number"},[t._v("2")]),s("br"),s("span",{staticClass:"line-number"},[t._v("3")]),s("br"),s("span",{staticClass:"line-number"},[t._v("4")]),s("br"),s("span",{staticClass:"line-number"},[t._v("5")]),s("br")])]),s("h3",{attrs:{id:"ivirtualtable"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#ivirtualtable"}},[t._v("#")]),t._v(" IVirtualTable")]),t._v(" "),s("p",[s("code",[t._v("IVirtualTable")]),t._v("叫做虚拟表,原先"),s("code",[t._v("DbContext")]),t._v("对应一个"),s("code",[t._v("Entity")]),t._v("对应一张"),s("code",[t._v("Table")]),t._v(",虚拟表的出现将"),s("code",[t._v("Entity")]),t._v("和"),s("code",[t._v("Table")]),t._v("之间多了一个虚拟表的概念，就是说原先的对象是直接映射到实际表，那么因为现在实际表名称有很多张，所以一个对象对应的是虚拟表"),s("code",[t._v("IVirtualTable")]),t._v("，虚拟表内部拥有虚拟表路由"),s("code",[t._v("IVirtualTableRoute")]),t._v("，虚拟表路由会将crud的结果通过虚拟表路由，路由到对应的实际表，所以原则上你在数据库里面将看不到原表名称的实际表，除非你的分表是没有后缀的。")]),t._v(" "),s("div",{staticClass:"language-csharp line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-csharp"}},[s("code",[s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//通过虚拟表管理者")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("IVirtualTableManager")]),t._v(" virtualTableManager"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),s("span",{pre:!0,attrs:{class:"token range operator"}},[t._v("..")]),s("span",{pre:!0,attrs:{class:"token range operator"}},[t._v("..")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\nvirtualTableManager"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("GetVirtualTable")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("EntityType"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\nvirtualTableManager"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token generic-method"}},[s("span",{pre:!0,attrs:{class:"token function"}},[t._v("GetVirtualTable")]),s("span",{pre:!0,attrs:{class:"token generic class-name"}},[s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("<")]),t._v("TEntity"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])])]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n\n")])]),t._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[t._v("1")]),s("br"),s("span",{staticClass:"line-number"},[t._v("2")]),s("br"),s("span",{staticClass:"line-number"},[t._v("3")]),s("br"),s("span",{staticClass:"line-number"},[t._v("4")]),s("br"),s("span",{staticClass:"line-number"},[t._v("5")]),s("br")])]),s("h3",{attrs:{id:"ivirtualtableroute"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#ivirtualtableroute"}},[t._v("#")]),t._v(" IVirtualTableRoute")]),t._v(" "),s("p",[s("code",[t._v("IVirtualTableRoute")]),t._v("虚拟表路由，针对对象如果我们需要对其进行分表，那么我么你必须要重写分表的路由，分表路由会告诉程序我们的这个sql执行是该如何找寻对应的实际表，而不用用户手动去指定对应的表，每一个虚拟表都会拥有一个虚拟表路由")]),t._v(" "),s("div",{staticClass:"language-csharp line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-csharp"}},[s("code",[s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//首先获取虚拟表")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("IVirtualTable")]),t._v(" virtualTable"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),s("span",{pre:!0,attrs:{class:"token range operator"}},[t._v("..")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//通过虚拟表获取虚拟表路由")]),t._v("\nvirtualTable"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("GetVirtualRoute")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])]),t._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[t._v("1")]),s("br"),s("span",{staticClass:"line-number"},[t._v("2")]),s("br"),s("span",{staticClass:"line-number"},[t._v("3")]),s("br"),s("span",{staticClass:"line-number"},[t._v("4")]),s("br")])])])}),[],!1,null,null,null);a.default=e.exports}}]);